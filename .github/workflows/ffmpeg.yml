name: ffmpeg
on:
  push:
  pull_request:

env:
  DEBIAN_FRONTEND: noninteractive
  LD_LIBRARY_PATH: /usr/local/lib/x86_64-linux-gnu

jobs:
  ffmpeg:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-18.04
            CC: gcc
            CXX: g++
          - os: macos-10.15
            CC: clang
            CXX: clang++
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
    steps:
      - name: Setup python
        uses: actions/setup-python@v1.2.0
        with:
          python-version: 3.8
      - name: Install meson and ninja
        run: |
          python -m pip install --upgrade pip
          pip install meson
      - name: Install dependencies (ubuntu)
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo apt-get update
          sudo -E apt-get -yq install ninja-build gcc nasm
      - name: Install dependencies (mac)
        if: matrix.os == 'macos-10.15'
        run: |
          # https://github.com/actions/virtual-environments/issues/1811#issuecomment-708480190
          brew uninstall openssl@1.0.2t
          brew uninstall python@2.7.17
          brew untap local/openssl
          brew untap local/python2
          # ^ FIXME
          brew update
          brew upgrade
          brew install -q ninja nasm
      - uses: actions/checkout@v2
      - name: Build vmaf
        run: |
          meson setup libvmaf libvmaf/build --buildtype release
          sudo ninja -vC libvmaf/build install
      - name: Prepare FFmpeg
        run: |
          git clone -q --branch master --depth=1 "https://github.com/FFmpeg/FFmpeg" ffmpeg
          cd ffmpeg
          ./configure --enable-version3 --enable-libvmaf --cc="$CC" --cxx="$CXX" || { less ffbuild/config.log; exit 1; }
      - name: Make FFmpeg
        run: |
          sudo make -C ffmpeg --quiet -j $(getconf _NPROCESSORS_ONLN 2>/dev/null || sysctl -n hw.ncpu) install
      - name: Test ffmpeg
        run: |
          cat /proc/cpuinfo
          curl "https://gist.githubusercontent.com/1480c1/0c4575da638ef6e8203feffd0597de16/raw/akiyo_cif.tar.xz.base64" | base64 -d | tar xJ
          vmaf_score=$(ffmpeg -hide_banner -nostats -i encoded.mkv -i orig.mkv -filter_complex libvmaf -f null - 2>&1 | grep 'VMAF score' | tr ' ' '\n' | tail -n1)
          echo "$vmaf_score"
          if [[ $vmaf_score != "93.656203" ]]; then
            echo "vmaf Score doesn't match 93.656203"
            exit 1
          else
            echo "vmaf score matches"
            exit 0
          fi
        continue-on-error: true
